title="declarative packages configuration"
# nix is somewhat too complicate for me

# default select for module/directory
enable_default=true

[flags]
is_wsl="which powershell.exe &>/dev/null"
is_laptop="ls /sys/class/power_supply | grep BAT &>/dev/null"
is_personal="[ \"$(yadm config local.class)\" = \"personal\" ]"

# packages in the archwiki "Installation guide"
[essential]
enabled="not is_wsl"
packages=[
    "base",
    "linux",
    "linux-headers",
    "linux-firmware",
    "networkmanager"
]

[boot]
enabled="not is_wsl"
packages=[
    "grub",               # bootloader
    "efibootmgr"         # =grub= write boot entries to NVRAM
    # "mkinitcpio-firmware" # suppress warnnings when mkinitcpio
]

[user]
packages=[
    "gnome-keyring",
    "xdg-user-dirs",  # no abused dir at home
]

[nvidia]
enabled="not is_wsl"
packages=[
    "nvidia-open-dkms",
    "nvidia-utils",
    "nvidia-settings",
    "libva-nvidia-driver", # hardware video acceleration
    "nvidia-prime",
    "nvtop"
]

[amd]
# for cpu with integrated graphics
packages=[
    "amd-ucode",
    # "amdgpu_top-bin",
    "mesa",             # 3D hardware video acceleration
    "lib32-mesa",
    # "libva-utils",      # vainfo
    "mesa-utils",       # glxinfo
    "xf86-video-amdgpu" # xorg
]

[display-server]
# only enable when there is display manager
enabled=false
packages=[
    "xorg-server",
    "xorg-xdpyinfo",   # for =betterlockscreen=
    "xorg-xwininfo",   # Option for ~picom-trans~
    "dragon-drop",
    "accountsservice", # user avatar
    "mons"
]

[sddm]
enabled="not is_wsl"
depends_on=["display-server"]
packages=[
    "sddm",
    "sddm-theme-corners-git",
    # "sddm-sugar-light",
    # "sddm-sugar-candy-git"
]

[lightdm]
enabled=false
depends_on=["display-server"]
packages=[
    "lightdm",
    "lightdm-webkit-theme-aether",
    "lightdm-webkit-theme-litarvan"
]

[awesome]
enabled="not is_wsl"
directory="~/.config/awesome/"
packages=[
    "awesome-git"
]

[wsl-extra]
enabled="is_wsl"
packages=[
    "base"
]

[gtk]
packages=[
    "gtk2", # pinenty
    "bibata-cursor-theme-bin",
    "papirus-icon-theme",
    "ttf-sarasa-gothic-sc",
    "orchis-theme-dracula-git",
    "gtk-engine-murrine" # gtk2 support with orchis-theme-git
]

[qt5ct]
enabled="not is_wsl"
packages=[
    "kvantum",
    "kvantum-qt5", # qt5 style theme
    "kvantum-theme-orchis-git",
    "papirus-icon-theme",
    "qt5-styleplugins",
    "qt5ct",
    "qt6ct", # for some qt6 applications
]

[sound]
enabled="not is_wsl"
packages=[
    "pipewire",
    "pipewire-alsa",
    "pipewire-jack",
    "pipewire-pulse",
    "playerctl",
    "wireplumber"
]

[bluetooth]
enabled="not is_wsl"
packages=["blueman", "bluez", "bluez-utils"]

[fontconfig]
packages=[
    "ttf-sarasa-gothic-sc",
    "noto-fonts-emoji" # emoji support
]

[input_method]
enabled="not is_wsl"
groups=["fcitx5-im"]
packages=[
    "fcitx5-nord",
    "fcitx5-rime",
    "rime-cloverpinyin"
]

[doom]
directory="~/.config/doom/"
packages=[
    "emacs-nativecomp",
    "fd",
    "ripgrep"
]

[fish]
packages=[
    "bc",
    "fish",
    "starship",      # shell prompt pretty
    "xorg-xdpyinfo", # set =GDK_SCALE= depends on resolution
    # "xorg-xprop", # required by =gnome-keyring=
    "fish-done"      # notify background shell work done
]

[other-applications]
enabled="not is_wsl"
packages=[
    "alacritty",
    "dracula-alacritty-git",
    "librewolf-bin",
    "python-pywalfox-librewolf", # sync walfox theme
    # "neovim", # always use emacs!
    "nextcloud-client"
]

[usb]
enabled="not is_wsl"
packages=[
    "udiskie",             # automount usb drive
    "usbutils",            # =lsusb=
    "ventoy-bin",          # usb bootable media
]

[base-dev]
packages=[
    "base-devel", # =gcc, which, make, sudo=
    "gdb",
    "ollama-cuda", # LLMs
    "python-tomli", # required by this script
    "python",
    "git",
    "openssh",
    "paru"
]

[utilities]
packages=[
    "peek" # screen recorder
]

[shell-utilities]
packages=[
    "bat",            # better =cat=
    "bpytop",         # system monitor
    "eza",            # better =ls=
    "zoxide",         # better =cd=
    "fzf",            # extend `zoxide' with selection
    "gdu-bin",        # =du= on all directories
    # "inxi",           # system information tool
    "man-db",         # man page
    "fastfetch",
    "openbsd-netcat", # ssh using http tunnel using =nc=
    "p7zip",
    "proxychains-ng", # force proxy
    # "ranger",         # command line file browser
    "tmsu-bin",       # tag manager system
    # "tokei",          # count lines of code
    "trash-cli",
    "unrar",
    "unzip",
    "yadm"            # reason you are here
]

[pacman]
packages=[
    "pacman-contrib",         # =checkupdates, paccache=
    "paccache-hook",          # clean pacman cache
    "rebuild-detector",       # detect packages need to rebuild
    "pacman-log-orphans-hook" # notify orphans packages
]

[paru-private]
directory="~/.config/paru"

[proxy]
enabled="not is_wsl"
packages=[
    "xray-bin", "qv2ray"
]

[remote]
enabled="not is_wsl"
packages=[
    "deskflow", # share keyboard
    "realvnc-vnc-viewer",
    "scrcpy",
    "tigervnc-server",
    "x11vnc"
]

[virtual]
enabled=false
# enabled="is_personal and not is_laptop and not is_wsl"
packages=[
    "dnsmasq",
    "edk2-ovmf",
    "genymotion", # android x86
    "libvirt",
    "qemu-desktop",
    "swtpm",
    "virt-manager",
    "virtio-win"
]

[amuse]
enabled="is_personal and not is_wsl"
packages=[
    "mpv",
    "qimgv-git", # image viewer
    "steam-native-runtime",
]

[communicate]
packages=[
    "wechat-universal-bwrap",
    # "wemeet-bin",
    "telegram-desktop"
]

[monitor]
enabled=false
packages=[
    "cpupower-gui",
    "hdparm",
    "smartmontools",
    "turbostat",
    "hwinfo"
]

[benchmark]
enabled=false
packages=[
    "blender-benchmark",
    "unigine-heaven",
    "cpu-x",
    "crazydiskinfo",
    "kdiskmark",
    "nvme-cli",
    "s-tui"
]

[more-dev]
enabled="not is_wsl"
packages=[
    "blender",
    "docker",
    # "docker-compose",
    # "genymotion", # android simulator
    "obs-studio",
    "gimp",
    "jdk-openjdk"
]

[devices]
enabled="is_personal and not is_wsl"
packages=[
    "openrgb-bin",
    "i2c-tools", # for =openrgb=
    # "vial-appimage"
]

[research]
enabled="not is_wsl and not is_laptop"
packages=[
    "fermat",
    "jupyter-notebook",
    "mathematica",
    "miktex",
    "zotero-bin"
]

[windows]
enabled="is_personal and not is_wsl"
packages=[
    "ntfs-3g",   # mount ntfs partition
    "os-prober", # other os entries in grub
    "chntpw"     # dual boot bluetooth repair
]

[network]
enabled="not is_wsl"
packages=[
    "iptables-nft",
    # "sshguard", # not much useful
    "network-manager-applet" # wifi system tray icon
]

[font-manager]
enabled=false
# those are all my favorite fonts
packages=[
    "font-manager",
    # "fontforge", # build custom fonts
    # sans
    "ttc-iosevka-aile",
    "ttf-fira-sans",
    "ttf-opensans",
    "ttf-sarasa-gothic-sc",
    # serif
    "adobe-source-serif-fonts",
    "gentium-plus-font",
    # code
    "ttf-agave-nerd",
    "ttf-bqn386-git",
    "ttf-firacode-nerd",        # ligature
    "ttf-recursive",
    # ui
    "ttf-comic-shanns-v2",
    # emoji
    "ttf-material-design-icons-git",
    "noto-fonts-emoji",
    "quirvira",
    # chinese
    "ttf-arphic-ukai",
    "ttf-kose-git",
    "ttf-lxgw-wenkai",
    "ttf-yozai-font",
    "ttf-lxgw-neo-xihei",
    "wqy-microhei"
]
